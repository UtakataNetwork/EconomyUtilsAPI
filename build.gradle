plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0-Beta'
    id 'com.github.johnrengelman.shadow' version '8.+' // FatJarç”¨
    id 'maven-publish'
}

jar {
    manifest {
        attributes "Main-Class" : "com.github.kuripasanda.economyutilsapi.EconomyUtilsAPI"
    }
}

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT" // SpigotAPI
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8" // Kotlin
    compileOnly "com.github.MilkBowl:VaultAPI:1.7" // VaultAPI
}

allprojects {
    repositories {
        mavenCentral()
    }

    group = 'com.github.kuripasanda'
    version = '1.0.3'
}

def targetJavaVersion = 11
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(targetJavaVersion)
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.kuripasanda'
                artifactId = 'EconomyUtilsApi'
                version = '1.0.3'
            }
        }
    }
}